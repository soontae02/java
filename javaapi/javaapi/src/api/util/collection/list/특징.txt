1. List계열

    1) Stack
    => Last In, First Out (LIFO)
    => 나중에 들어간 건 먼저 나온다.
    => push() 삽입, pop() 삭제

    2) ArrayList (*)
    => 배열기반의 리스트
    => 가장 평범하게 많이 사용됩니다.
    => 인덱스(순서 o), 값의 중복(o)

    3) LinkList
    => 노드(객체) 기반의 연결 리스트
    => 다음 노드의 주소값을 기록해서, 사슬처럼 연결해 놓은 구조
    => ArrayList와 사용방법은 똑같음
    => ArrayList보다 삽입, 삭제는 유리하고, 조회는 느림
    => Queue인터페이스를 구현하고 있기 때문에 Queue처럼도 사용가능

2. Queue계열
    1) Queue
    => First In First Out (FIFO)
    => 컴퓨터의 운영체제 스케줄링, 다양한 프로그래밍에서도 사용됨
    => 자바에서는 LinkedList를 Queue에 저장하면 Queue처럼 사용할 수 있습니다.
    => 큐의 대표적인 종류로는
        일반큐 - LinkedList
        양방향큐 - Deque
        우선순위큐 - PriorityQueue

    2) Deque
    => 양방향 큐 (양측에서 추가 삭제가 가능한 구조)
    => 자바에서는 ArrayDeque클래스로 사용합니다.
    => Deque인터페이스를 상속받습니다.

3. PriorityQueue
    => 값을 넣으면, 자동으로 정렬되는 형태
    => 문자열, 숫자 같은 경우는 자동 정렬되서 들어감
    => 사용자 객체를 쓰게 되면, 정렬의 방식을 반드시 확인해야 함